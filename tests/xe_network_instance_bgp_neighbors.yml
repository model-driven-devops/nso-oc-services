---
# ansible-playbook -i hosts_lab xe_network_instance_bgp_neighbors.yml -e "nso_ip=X.X.X.X device=xe1" --tags=all
# Neighbor remote-as
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_remote_as_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_remote_as_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                          neighbor-address: 10.11.11.2
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor remote-as
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_remote_as_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 remote-as 2:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_remote_as_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Neighbor auth-password
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_remote_auth_password
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_remote_auth_password
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                            auth-password: 'super_secret'
                          neighbor-address: 10.11.11.2
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor auth-password
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_remote_auth_password
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 password super_secret:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_remote_auth_password
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Neighbor description
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_description
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_description
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                            description: 'as_2_peer'
                          neighbor-address: 10.11.11.2
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor description
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_description
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 description as_2_peer:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_description
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Neighbor shutdown
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_shutdown_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_shutdown_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                            enabled: False
                          neighbor-address: 10.11.11.2
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor shutdown
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_shutdown_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 shutdown:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_shutdown_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Neighbor local-as
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_local_as_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_local_as_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                            local-as: 100
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor local-as
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_local_as_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 local-as 100:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_local_as_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Neighbor remove private as all
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_remove_private_as_all_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_remove_private_as_all_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                            remove-private-as: PRIVATE_AS_REMOVE_ALL
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor remove private as all
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_remove_private_as_all_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 remove-private-as all:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_remove_private_as_all_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Neighbor remove private as replace all
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_remove_private_as_replace_as_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_remove_private_as_replace_as_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                            remove-private-as: PRIVATE_AS_REPLACE_ALL
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor remove private as replace all
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_remove_private_as_replace_as_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 remove-private-as all replace-as:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_remove_private_as_replace_as_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Neighbor send community standard
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_standard_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_standard_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                            send-community: STANDARD
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor send community standard
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_standard_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 send-community:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_standard_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Neighbor send community extended
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_extended_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_extended_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                            send-community: EXTENDED
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor send community extended
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_extended_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 send-community extended:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_extended_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Neighbor send community both
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_both_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_both_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                            send-community: BOTH
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor send community both
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_both_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 send-community both:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_send_community_both_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Neighbor ebgp-multihop
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_ebgp_multihop_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_ebgp_multihop_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                          ebgp-multihop:
                            config:
                              enabled: True
                              multihop-ttl: 2
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor ebgp-multihop
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_ebgp_multihop_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 ebgp-multihop 2:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_ebgp_multihop_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Neighbor route-reflector-client
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_route_reflector_client_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_route_reflector_client_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 1
                          route-reflector:
                            config:
                              route-reflector-client: True
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor route-reflector-client
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_route_reflector_client_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 route-reflector-client:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_route_reflector_client_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Neighbor route-reflector cluster-id
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_route_reflector_cluster_id_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_route_reflector_cluster_id_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 1
                          route-reflector:
                            config:
                              route-reflector-cluster-id: 1.1.1.1
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor route-reflector cluster-id
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_route_reflector_cluster_id_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 cluster-id 1.1.1.1:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_route_reflector_cluster_id_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Neighbor timers
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_timers_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_timers_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                          timers:
                            config:
                              hold-time: 90
                              keepalive-interval: 30
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor timers
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_timers_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 timers 30 90:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_timers_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Neighbor transport mtu-discovery disable
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_transport_mtud_disable_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_transport_mtud_disable_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                          transport:
                            config:
                              mtu-discovery: False
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor transport mtu-discovery disable
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_transport_mtud_disable_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 transport path-mtu-discovery disable:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_transport_mtud_disable_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Neighbor transport passive-mode
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_transport_passive_mode_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_transport_passive_mode_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                          transport:
                            config:
                              passive-mode: True
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor transport passive-mode
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_transport_passive_mode_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 transport connection-mode passive:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_transport_passive_mode_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Neighbor transport local-address
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_transport_local_address_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_transport_local_address_test
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                          transport:
                            config:
                              local-address: Loopback10
                          neighbor-address: 10.11.11.2

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create BGP Neighbor transport local-address
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - neighbor_transport_local_address_test
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ neighbor 10.11.11.2 update-source Loopback10:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - neighbor_transport_local_address_test
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test neighbor address-family ipv4 unicast activate
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ad-ipv4-activate
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ad-ipv4-activate
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                        afi-safis:
                          afi-safi:
                            - afi-safi-name: 'IPV4_UNICAST'
                              config:
                                afi-safi-name: 'IPV4_UNICAST'
                                enabled: true
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                          neighbor-address: 10.11.11.2
                          afi-safis:
                            afi-safi:
                              - afi-safi-name: 'IPV4_UNICAST'
                                config:
                                  afi-safi-name: 'IPV4_UNICAST'
                                  enabled: true
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create ad-ipv4-activate
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ad-ipv4-activate
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ address-family ipv4:' in changes"
          - "'+  neighbor 10.11.11.2 activate:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ad-ipv4-activate
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test neighbor address-family vpnv4 unicast activate
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ad-vpnv4-activate
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ad-vpnv4-activate
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                        afi-safis:
                          afi-safi:
                            - afi-safi-name: 'L3VPN_IPV4_UNICAST'
                              config:
                                afi-safi-name: 'L3VPN_IPV4_UNICAST'
                                enabled: true
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                          neighbor-address: 10.11.11.2
                          afi-safis:
                            afi-safi:
                              - afi-safi-name: 'L3VPN_IPV4_UNICAST'
                                config:
                                  afi-safi-name: 'L3VPN_IPV4_UNICAST'
                                  enabled: true
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create ad-vpnv4-activate
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ad-vpnv4-activate
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ address-family vpnv4:' in changes"
          - "'+  neighbor 10.11.11.2 activate:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ad-vpnv4-activate
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test neighbor address-family ipv4 unicast vrf ABC activate
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ad-ipv4-activate-vrf
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ad-ipv4-activate-vrf
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                        afi-safis:
                          afi-safi:
                            - afi-safi-name: 'IPV4_UNICAST'
                              config:
                                afi-safi-name: 'IPV4_UNICAST'
                                enabled: true
            - name: 'abc'
              config:
                name: 'abc'
                type: 'L3VRF'
                enabled: true
                enabled-address-families:
                  - 'IPV4'
                route-distinguisher: '1:1'
                openconfig-network-instance-ext:route-targets-import:
                  - '100:100'
                  - '101:101'
                openconfig-network-instance-ext:route-targets-export:
                  - '200:200'
                  - '202:202'
              openconfig-network-instance:protocols:
                protocol:
                  - name: BGP
                    identifier: BGP
                    config:
                      enabled: True
                      identifier: BGP
                      name: BGP
                    bgp:
                      global:
                        config:
                          as: 1
                        afi-safis:
                          afi-safi:
                            - afi-safi-name: 'IPV4_UNICAST'
                              config:
                                afi-safi-name: 'IPV4_UNICAST'
                                enabled: true
                      neighbors:
                        neighbor:
                          config:
                            neighbor-address: 10.11.11.2
                            peer-as: 2
                          neighbor-address: 10.11.11.2
                          afi-safis:
                            afi-safi:
                              - afi-safi-name: 'IPV4_UNICAST'
                                config:
                                  afi-safi-name: 'IPV4_UNICAST'
                                  enabled: true
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create ad-ipv4-activate-vrf
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ad-ipv4-activate-vrf
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ address-family ipv4 vrf abc:' in changes"
          - "'+  neighbor 10.11.11.2 remote-as 2:' in changes"
          - "'+  neighbor 10.11.11.2 activate:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ad-ipv4-activate-vrf
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# TODO add all neighbor tests from default rt ipv4 to address-family ipv4 unicast vrf XXX

