---
# ansible-playbook xe_system.yml --extra-vars "nso_ip=X.X.X.X device=xe1" --tags=all
# enable finger
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - finger_enable
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - finger_enable
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-system:system:
          openconfig-system-ext:services:
            finger: true
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: System finger_enable
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - finger_enable
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ip finger:' in changes"

#- hosts: localhost
#  gather_facts: no
#  tags:
#    - all
#    - finger_enable
#    - rollback
#  tasks:
#    - name: Rollback
#      uri:
#        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
#        url_username: admin
#        url_password: admin
#        force_basic_auth: yes
#        validate_certs: no
#        status_code: [ 204 ]
#        method: POST
#        headers: "{
#          'Content-Type': 'application/yang-data+xml'}"
#        body: |
#          <input xmlns="http://tail-f.com/ns/rollback">
#            <id>0</id>
#          </input>

# disable finger
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - finger_disable
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - finger_disable
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-system:system:
          openconfig-system-ext:services:
            finger: false
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: System finger_disable
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - finger_disable
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'-ip finger:' in changes"

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - finger_disable
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# logging console and monitor
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - console-and-monitor-severity-emergency
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - console-and-monitor-severity-emergency
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-system:system:
          logging:  # facility must be same for all in IOS
            console:  # set console and monitor
              config: { }
              selectors:
                selector:
                  - config:
                      facility: 'SYSLOG'
                      severity: 'EMERGENCY'  # logging console & logging monitor
                    facility: 'SYSLOG'
                    severity: 'EMERGENCY'
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: System console-and-monitor-severity-emergency
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - console-and-monitor-severity-emergency
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+logging facility syslog:' in changes"
          - "'+logging console emergencies:' in changes"
          - "'+logging monitor emergencies:' in changes"
      ignore_errors: yes

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - console-and-monitor-severity-emergency
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# logging remote server
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - remote-servers-severity-emergency
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - remote-servers-severity-emergency
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-system:system:
          logging:  # facility must be same for all in IOS
            remote-servers:
              remote-server:
                - config:
                    host: '10.0.0.1'  # logging host x.x.x.x
                    remote-port: '514'
                  host: '10.0.0.1'
                  selectors:
                    selector:
                      - config:
                          facility: 'SYSLOG'
                          severity: 'EMERGENCY'
                        facility: 'SYSLOG'
                        severity: 'EMERGENCY'
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: System remote-servers-severity-emergency
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - remote-servers-severity-emergency
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+logging trap emergencies:' in changes"
      ignore_errors: yes

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - remote-servers-severity-emergency
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# logging remote server, console, and monitor
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - any-emergency
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - any-emergency
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-system:system:
          logging:  # facility must be same for all in IOS
            console:  # set console and monitor
              config: { }
              selectors:
                selector:
                  - config:
                      facility: 'SYSLOG'
                      severity: 'CRITICAL'  # logging console & logging monitor
                    facility: 'SYSLOG'
                    severity: 'CRITICAL'
            remote-servers:
              remote-server:
                - config:
                    host: '10.0.0.1'  # logging host x.x.x.x
                    remote-port: '514'
                  host: '10.0.0.1'
                  selectors:
                    selector:
                      - config:
                          facility: 'SYSLOG'
                          severity: 'ERROR'
                        facility: 'SYSLOG'
                        severity: 'ERROR'
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: System any-emergency
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - any-emergency
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+logging console critical:' in changes"
          - "'+logging monitor critical:' in changes"
          - "'+logging trap errors:' in changes"
      ignore_errors: yes

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - any-emergency
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>