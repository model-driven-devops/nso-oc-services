---
# ansible-playbook xe_network_instance_ospfv2_global.yml --extra-vars "nso_ip=X.X.X.X device=xe1" --tags=all
# Test OSPF process
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - process
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - process
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1  # this is the process ID
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1  # this is the process ID
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF process
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - process
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+router ospf 1:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - process
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Test OSPF router-id
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - router_id
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - router_id
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1
                    ospfv2:
                      global:
                        config:
                          router-id: 1.1.1.1
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF router_id
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - router_id
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ router-id 1.1.1.1:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - router_id
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Test OSPF log adjacency changes
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - log_adjacency_changes
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - log_adjacency_changes
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1  # this is the process ID
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1  # this is the process ID
                    ospfv2:
                      global:
                        config:
                          log-adjacency-changes: True
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF log_adjacency_changes
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - log_adjacency_changes
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+router bgp 1:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - log_adjacency_changes
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test OSPF prefix-suppression
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - prefix_suppression
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - prefix_suppression
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1  # this is the process ID
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1  # this is the process ID
                    ospfv2:
                      global:
                        config:
                          hide-transit-only-networks: True
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF prefix_suppression
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - prefix_suppression
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ prefix-suppression:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - prefix_suppression
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test OSPF summary-route-cost-mode
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - summary_route_cost_mode_2328
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - summary_route_cost_mode_2328
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1  # this is the process ID
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1  # this is the process ID
                    ospfv2:
                      global:
                        config:
                          summary-route-cost-mode: 'RFC2328_COMPATIBLE'  # XE default is RFC1583_COMPATIBLE
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF summary_route_cost_mode_2328
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - summary_route_cost_mode_2328
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ no compatible rfc1583:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - summary_route_cost_mode_2328
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test OSPF graceful restart enabled
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - graceful_restart_enabled
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - graceful_restart_enabled
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1  # this is the process ID
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1  # this is the process ID
                    ospfv2:
                      global:
                        graceful-restart:
                          config:
                            enabled: True
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF graceful_restart_enabled
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - graceful_restart_enabled
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+nsf ietf:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - graceful_restart_enabled
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test OSPF inter-area-propagation-policies
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - inter_area_propagation_policy
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - inter_area_propagation_policy  # TODO add areas references by src and dst
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-routing-policy:routing-policy:
          defined-sets:
            prefix-sets:
              prefix-set:
                - name: test
                  config:
                    name: test
                    mode: IPV4
                  prefixes:
                    prefix:
                      - ip-prefix: '10.0.0.0/24'
                        masklength-range: exact
                        config:
                          ip-prefix: '10.0.0.0/24'
                          masklength-range: exact
                          openconfig-routing-policy-ext:seq: 10
                      - ip-prefix: '10.10.10.0/24'
                        masklength-range: '24..30'
                        config:
                          ip-prefix: '10.10.10.0/24'
                          masklength-range: '24..30'
                          openconfig-routing-policy-ext:seq: 20
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1  # this is the process ID
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1  # this is the process ID
                    ospfv2:
                      global:
                        inter-area-propagation-policies:
                          inter-area-propagation-policy:
                            - config:
                                dst-area: 3
                                src-area: 0
                                import-policy:
                                  - 'test'
                              dst-area: 3
                              src-area: 0
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF inter_area_propagation_policy
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - inter_area_propagation_policy
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ area 3 filter-list prefix test in:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - inter_area_propagation_policy
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test OSPF mpls igp-ldp-sync
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - mpls_ldp_igp_sync
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - mpls_ldp_igp_sync
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1  # this is the process ID
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1  # this is the process ID
                    ospfv2:
                      global:
                        mpls:
                          igp-ldp-sync:
                            config:
                              enabled: True
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF mpls_ldp_igp_sync
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - mpls_ldp_igp_sync
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ mpls ldp igp sync:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - mpls_ldp_igp_sync
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test OSPF timers lsa-generation
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - timers_lsa
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - timers_lsa
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1  # this is the process ID
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1  # this is the process ID
                    ospfv2:
                      global:
                        timers:
                          lsa-generation:
                            config:
                              initial-delay: 1000
                              maximum-delay: 10000
                              oc-ospfv2-ext:hold-time: 5000
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF timers_lsa
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - timers_lsa
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ timers throttle lsa all 1000 5000 10000:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - timers_lsa
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# Test OSPF timers spf
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - timers_spf
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - timers_spf
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'  # All interfaces are in default unless listed under other VRF
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'  # oc-ni-types:DEFAULT_INSTANCE
                enabled: true
              protocols:
                protocol:
                  - name: 1  # this is the process ID
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1  # this is the process ID
                    ospfv2:
                      global:
                        timers:
                          lsa-generation:
                            config:
                              initial-delay: 10000
                              maximum-delay: 20000
                              oc-ospfv2-ext:hold-time: 20000
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF timers_spf
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - timers_spf
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ timers throttle lsa all 10000 20000 20000:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - timers_spf
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>