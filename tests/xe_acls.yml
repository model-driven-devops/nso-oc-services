---
# ansible-playbook xe_acls.yml --extra-vars "nso_ip=X.X.X.X device=xe1" --tags=all
# Test ACL_IPV4_STANDARD Type
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - acl_type_standard
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - acl_type_standard
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-acl:acl:
          acl-sets:
            acl-set:
              - config:
                  name: '11'
                  type: 'openconfig-acl-ext:ACL_IPV4_STANDARD'
                name: '11'
                type: 'openconfig-acl-ext:ACL_IPV4_STANDARD'
                acl-entries:
                  acl-entry:
                    - actions:
                        config:
                          forwarding-action: 'ACCEPT'
                          log-action: 'LOG_NONE'
                      config:
                        sequence-id: '10'
                      openconfig-acl-ext:ipv4:
                        source-address: '10.0.0.0/8'
                      sequence-id: '10'
                    - actions:
                        config:
                          forwarding-action: 'REJECT'
                          log-action: 'LOG_NONE'
                      config:
                        sequence-id: '20'
                      openconfig-acl-ext:ipv4:
                        source-address: '0.0.0.0/0'
                      sequence-id: '20'
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: Create ACL Standard Type
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - acl_type_standard
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ip access-list standard 11:' in changes"
          - "'+ 10 permit 10.0.0.0 0.255.255.255:' in changes"
          - "'+ 20 deny   any:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - acl_type_standard
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>