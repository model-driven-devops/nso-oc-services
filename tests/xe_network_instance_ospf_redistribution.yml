---
# ansible-playbook -i hosts_lab xe_network_instance_ospf_redistribution.yml -e "nso_ip=X.X.X.X device=xe1" --tags=all
# redistribute connected
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: 1
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1
              table-connections:
                table-connection:
                  - address-family: 'IPV4'
                    dst-protocol: 'OSPF'
                    src-protocol: 'DIRECTLY_CONNECTED'
                    config:
                      address-family: 'IPV4'
                      dst-protocol: 'OSPF'
                      openconfig-network-instance-ext:dst-protocol-process-number: 1
                      src-protocol: 'DIRECTLY_CONNECTED'
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF ospf_ipv4
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ redistribute connected:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# redistribute connected route-map
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_route_map
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_route_map
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-routing-policy:routing-policy:
          defined-sets:
            prefix-sets:
              prefix-set:
                - name: prefix_test
                  config:
                    name: prefix_test
                    mode: IPV4
                  prefixes:
                    prefix:
                      - ip-prefix: '192.133.184.0/22'
                        masklength-range: exact
                        config:
                          ip-prefix: '192.133.184.0/22'
                          masklength-range: exact
                          openconfig-routing-policy-ext:seq: 10
          policy-definitions:
            policy-definition:
              - name: 'test'
                config:
                  name: 'test'
                statements:
                  openconfig-routing-policy:statement:
                    - name: '10'
                      config:
                        name: '10'
                      conditions:
                        match-prefix-set:
                          config:
                            prefix-set: 'prefix_test'
                            match-set-options: 'ANY'
                      openconfig-routing-policy:actions:
                        config:
                          policy-result: 'REJECT_ROUTE'  # or REJECT_ROUTE
                    - name: '20'
                      config:
                        name: '20'
                      actions:
                        config:
                          policy-result: 'ACCEPT_ROUTE'  # or REJECT_ROUTE
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: 1
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1
              table-connections:
                table-connection:
                - address-family: 'IPV4'
                  dst-protocol: 'OSPF'
                  src-protocol: 'DIRECTLY_CONNECTED'
                  config:
                    address-family: 'IPV4'
                    dst-protocol: 'OSPF'
                    openconfig-network-instance-ext:dst-protocol-process-number: 1
                    src-protocol: 'DIRECTLY_CONNECTED'
                    import-policy:
                    - 'test'
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF ospf_ipv4_route_map
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_route_map
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ redistribute connected route-map test:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_route_map
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# redistribute static
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_static
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_static
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: 1
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1
              table-connections:
                table-connection:
                  - address-family: 'IPV4'
                    dst-protocol: 'OSPF'
                    src-protocol: 'STATIC'
                    config:
                      address-family: 'IPV4'
                      dst-protocol: 'OSPF'
                      openconfig-network-instance-ext:dst-protocol-process-number: 1
                      src-protocol: 'STATIC'

  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF ospf_ipv4_static
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_static
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ redistribute static:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_static
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# redistribute static route-map
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_static_route_map
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_static_route_map
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-routing-policy:routing-policy:
          defined-sets:
            prefix-sets:
              prefix-set:
                - name: prefix_test
                  config:
                    name: prefix_test
                    mode: IPV4
                  prefixes:
                    prefix:
                      - ip-prefix: '192.133.184.0/22'
                        masklength-range: exact
                        config:
                          ip-prefix: '192.133.184.0/22'
                          masklength-range: exact
                          openconfig-routing-policy-ext:seq: 10
          policy-definitions:
            policy-definition:
              - name: 'test'
                config:
                  name: 'test'
                statements:
                  openconfig-routing-policy:statement:
                    - name: '10'
                      config:
                        name: '10'
                      conditions:
                        match-prefix-set:
                          config:
                            prefix-set: 'prefix_test'
                            match-set-options: 'ANY'
                      openconfig-routing-policy:actions:
                        config:
                          policy-result: 'REJECT_ROUTE'  # or REJECT_ROUTE
                    - name: '20'
                      config:
                        name: '20'
                      actions:
                        config:
                          policy-result: 'ACCEPT_ROUTE'  # or REJECT_ROUTE
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: 1
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1
              table-connections:
                table-connection:
                - address-family: 'IPV4'
                  dst-protocol: 'OSPF'
                  src-protocol: 'STATIC'
                  config:
                    address-family: 'IPV4'
                    dst-protocol: 'OSPF'
                    src-protocol: 'STATIC'
                    openconfig-network-instance-ext:dst-protocol-process-number: 1
                    import-policy:
                    - 'test'
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF ospf_ipv4_static_route_map
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_static_route_map
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ redistribute static route-map test:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_static_route_map
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# redistribute ospf 2
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_ospf
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_ospf
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: 1
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1
              table-connections:
                table-connection:
                  - address-family: 'IPV4'
                    dst-protocol: 'OSPF'
                    src-protocol: 'OSPF'
                    config:
                      address-family: 'IPV4'
                      dst-protocol: 'OSPF'
                      openconfig-network-instance-ext:dst-protocol-process-number: 1
                      src-protocol: 'OSPF'
                      openconfig-network-instance-ext:src-protocol-process-number: 2
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF ospf_ipv4_ospf
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_ospf
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ redistribute ospf 2:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_ospf
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

# Test OSPF process vrf redistribute connected
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - process_vrf_connected
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - process_vrf_connected
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
            - name: 'abc'
              config:
                name: 'abc'
                type: 'L3VRF'
                enabled: true
                enabled-address-families:
                  - 'IPV4'
                route-distinguisher: '1:1'
              protocols:
                protocol:
                  - name: 1
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1
              table-connections:
                table-connection:
                  - address-family: 'IPV4'
                    dst-protocol: 'OSPF'
                    src-protocol: 'DIRECTLY_CONNECTED'
                    config:
                      address-family: 'IPV4'
                      dst-protocol: 'OSPF'
                      openconfig-network-instance-ext:dst-protocol-process-number: 1
                      src-protocol: 'DIRECTLY_CONNECTED'
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF process_vrf_connected
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - process_vrf_connected
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+router ospf 1 vrf abc:' in changes"
          - "'+ redistribute connected:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - process_vrf_connected
    - rollback
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# redistribute bgp 1
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_bgp
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_bgp
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: 1
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1
              table-connections:
                table-connection:
                  - address-family: 'IPV4'
                    dst-protocol: 'OSPF'
                    src-protocol: 'BGP'
                    config:
                      address-family: 'IPV4'
                      dst-protocol: 'OSPF'
                      openconfig-network-instance-ext:dst-protocol-process-number: 1
                      src-protocol: 'BGP'
                      openconfig-network-instance-ext:src-protocol-process-number: 1
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF ospf_ipv4_bgp
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_bgp
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ redistribute bgp 1:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_bgp
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>
# redistribute bgp route-map
- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_bgp_route_map
  vars:
    ansible_network_os: 'cisco.ios.ios'
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (before)
      ios_command:
        commands:
          - show run
      register: result_before

- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_bgp_route_map
  vars:
    device_name: "{{ device }}"
    content: |
      mdd:openconfig:
        openconfig-routing-policy:routing-policy:
          defined-sets:
            prefix-sets:
              prefix-set:
                - name: prefix_test
                  config:
                    name: prefix_test
                    mode: IPV4
                  prefixes:
                    prefix:
                      - ip-prefix: '192.133.184.0/22'
                        masklength-range: exact
                        config:
                          ip-prefix: '192.133.184.0/22'
                          masklength-range: exact
                          openconfig-routing-policy-ext:seq: 10
          policy-definitions:
            policy-definition:
              - name: 'test'
                config:
                  name: 'test'
                statements:
                  openconfig-routing-policy:statement:
                    - name: '10'
                      config:
                        name: '10'
                      conditions:
                        match-prefix-set:
                          config:
                            prefix-set: 'prefix_test'
                            match-set-options: 'ANY'
                      openconfig-routing-policy:actions:
                        config:
                          policy-result: 'REJECT_ROUTE'  # or REJECT_ROUTE
                    - name: '20'
                      config:
                        name: '20'
                      actions:
                        config:
                          policy-result: 'ACCEPT_ROUTE'  # or REJECT_ROUTE
        openconfig-network-instance:network-instances:
          network-instance:
            - name: 'default'
              config:
                name: 'default'
                type: 'DEFAULT_INSTANCE'
                enabled: true
              protocols:
                protocol:
                  - name: 1
                    identifier: OSPF
                    config:
                      enabled: True
                      identifier: OSPF
                      name: 1
              table-connections:
                table-connection:
                  - address-family: 'IPV4'
                    dst-protocol: 'OSPF'
                    src-protocol: 'BGP'
                    config:
                      address-family: 'IPV4'
                      dst-protocol: 'OSPF'
                      openconfig-network-instance-ext:dst-protocol-process-number: 1
                      src-protocol: 'BGP'
                      openconfig-network-instance-ext:src-protocol-process-number: 1
                      import-policy:
                      - 'test'
  tasks:
    - name: Convert string to JSON
      set_fact:
        configs: "{{ content | from_yaml | to_json }}"
    - name: JSON configs
      debug:
        msg: "{{ configs }}"
    - name: OSPF ospf_ipv4_bgp_route_map
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-ncs:devices/device={{ device_name }}/mdd:openconfig"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: PUT
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
        body: "{{ configs }}"

- hosts: "{{ device }}"
  connection: network_cli
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_bgp_route_map
  vars:
    ansible_network_os: 'cisco.ios.ios'
    exclude_list:
      - (^Using.*)
      - (Building.*)
      - (Current.*)
      - (crypto pki certificate chain.*)
  roles:
    - ansible-pyats
  tasks:
    - name: collect config (after)
      ios_command:
        commands:
          - show run
      register: result_after
    - set_fact:
        changes: "{{ result_before.stdout[0] | genie_config_diff(result_after.stdout[0], mode='add', exclude=exclude_list) }}"
    - name: debug changes
      debug:
        msg: "{{ changes }}"
    - assert:
        that:
          - "'+ redistribute bgp 1 route-map test:' in changes"
      ignore_errors: yes
- hosts: localhost
  gather_facts: no
  tags:
    - all
    - ospf_ipv4_bgp_route_map
  tasks:
    - name: Rollback
      uri:
        url: "http://{{ nso_ip }}:8080/restconf/data/tailf-rollback:rollback-files/apply-rollback-file"
        url_username: admin
        url_password: admin
        force_basic_auth: yes
        validate_certs: no
        status_code: [ 204 ]
        method: POST
        headers: "{
          'Content-Type': 'application/yang-data+xml'}"
        body: |
          <input xmlns="http://tail-f.com/ns/rollback">
            <id>0</id>
          </input>

