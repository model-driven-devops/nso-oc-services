- name: Build the topology
  hosts: localhost
  vars:
    cml_lab_file: "{{ lookup('env','CML_LAB_FILE') }}"
    cml_lab: "{{ lookup('env','CML_LAB') }}"
    cml_host: "{{ lookup('env','CML_HOST') }}"
    cml_username: "{{ lookup('env','CML_USERNAME') }}"
    cml_password: "{{ lookup('env','CML_PASSWORD') }}"
  gather_facts: no
  tasks:
    - name: Create the lab
      cisco.cml.cml_lab:
        host: "{{ cml_host }}"
        user: "{{ cml_username }}"
        password: "{{ cml_password }}"
        lab: "{{ cml_lab }}"
        state: present
        file: "{{ cml_lab_file }}"
      register: results

    - name: Refresh Inventory
      meta: refresh_inventory
    - name: Pause for 1 minute
      pause:
        minutes: 1

- name: Start Lab
  hosts: unmanaged_devices:nso:xe1:xeswitch1
  connection: local
  gather_facts: no
  tasks:
    - name: Start Lab
      cisco.cml.cml_node:
        name: "{{ inventory_hostname }}"
        host: "{{ cml_host }}"
        user: "{{ cml_username }}"
        password: "{{ cml_password }}"
        lab: "{{ cml_lab }}"
        state: started

- name: Check initial topology connectivity
  hosts: nso
  connection: local
  any_errors_fatal: true
  gather_facts: no
  tasks:
    - name: Wait until the mgmt interface comes up
      cisco.cml.cml_lab_facts:
        host: "{{ cml_host }}"
        user: "{{ cml_username }}"
        password: "{{ cml_password }}"
        lab: "{{ cml_lab }}"
      register: result
      until: result.cml_facts.nodes[inventory_hostname].ansible_host is defined and result.cml_facts.nodes[inventory_hostname].ansible_host
      retries: 60
      delay: 10
      delegate_to: 127.0.0.1
    - set_fact:
        ansible_host: "{{result.cml_facts.nodes[inventory_hostname].ansible_host}}"

- name: Check initial topology connectivity xe1
  hosts: xe1
  connection: local
  any_errors_fatal: true
  gather_facts: no
  tasks:
    - name: Wait until the mgmt interface comes up
      cisco.cml.cml_lab_facts:
        host: "{{ cml_host }}"
        user: "{{ cml_username }}"
        password: "{{ cml_password }}"
        lab: "{{ cml_lab }}"
      register: result
      until: result.cml_facts.nodes[inventory_hostname].ansible_host is defined and result.cml_facts.nodes[inventory_hostname].ansible_host
      retries: 60
      delay: 10
      delegate_to: 127.0.0.1
    - set_fact:
        ansible_host: "{{result.cml_facts.nodes[inventory_hostname].ansible_host}}"

- name: Check initial topology connectivity xeswitch1
  hosts: xeswitch1
  connection: local
  any_errors_fatal: true
  gather_facts: no
  tasks:
    - name: Wait until the mgmt interface comes up
      cisco.cml.cml_lab_facts:
        host: "{{ cml_host }}"
        user: "{{ cml_username }}"
        password: "{{ cml_password }}"
        lab: "{{ cml_lab }}"
      register: result
      until: result.cml_facts.nodes[inventory_hostname].ansible_host is defined and result.cml_facts.nodes[inventory_hostname].ansible_host
      retries: 60
      delay: 10
      delegate_to: 127.0.0.1
    - set_fact:
        ansible_host: "{{result.cml_facts.nodes[inventory_hostname].ansible_host}}"

- name: Update ansible_host
  hosts: localhost
  tasks:
    - copy:
        content: "NSO_HOST={{ hostvars['nso'].ansible_host }}"
        dest: "../nso_host.txt"
      when: hostvars['nso'].ansible_host is defined
    - copy:
        content: "XE1_HOST={{ hostvars['xe1'].ansible_host }}"
        dest: "../xe1_host.txt"
      when: hostvars['xe1'].ansible_host is defined
    - copy:
        content: "XESWITCH1_HOST={{ hostvars['xeswitch1'].ansible_host }} "
        dest: "../xeswitch1_host.txt"
      when: hostvars['xeswitch1'].ansible_host is defined