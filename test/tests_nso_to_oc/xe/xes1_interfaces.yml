---
- hosts: localhost
  gather_facts: no
  environment:
    NSO_DEVICE: xeswitch1
  vars:
    nso_host: "{{ lookup('env', 'NSO_HOST') }}"
    nso_username: "{{ lookup('env', 'NSO_USERNAME') }}"
    nso_password: "{{ lookup('env', 'NSO_PASSWORD') }}"
    device: "{{ lookup('env', 'TEST_DEVICE_XESWITCH') | default('xeswitch1', True) }}"
  tasks:
    - name: Set up service config
      tags:
        - set_up
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: mdd:openconfig
        content: |
          mdd:openconfig:
            openconfig-network-instance:network-instances:
              network-instance:
                - name: 'default'
                  config:
                    name: 'default'
                    type: 'DEFAULT_INSTANCE'
                    enabled: true
                - name: 'abc'
                  config:
                    name: 'abc'
                    type: 'L3VRF'
                    enabled: true
                    enabled-address-families:
                      - 'IPV4'
            openconfig-system:system:
              config:
                hostname: 'test'
        api_method: PUT
    - name: NSO configure VLANs
      tags:
        - set_up
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:vlan
        script: ../../../package_nso_to_oc/xe/xe_vlans.py
        content: |
          vlan:
            vlan-list:
              - id: 1
                name: default
              - id: 99
                name: VLAN99
              - id: 100
                name: VLAN100
              - id: 101
                name: VLAN101
                shutdown:
                  - null
              - id: 105
                name: VLAN105
              - id: 106
                name: VLAN106
        api_method: PATCH
    - name: DELETE NED G1/1 trunk config
      tags:
        - set_up
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/GigabitEthernet=1%2F1/switchport/trunk
        content: ''
        api_method: DELETE
        api_ignore_errors: true
    - name: DELETE NED port-channel sub-interfaces
      tags:
        - set_up
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/Port-channel-subinterface
        content: ''
        api_method: DELETE
        api_ignore_errors: true
    - name: DELETE NED port-channel 1
      tags:
        - set_up
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/Port-channel=1
        content: ''
        api_method: DELETE
        api_ignore_errors: true
    - name: DELETE NED port-channel 10
      tags:
        - set_up
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/Port-channel=10
        content: ''
        api_method: DELETE
        api_ignore_errors: true
    - name: NSO configure Interfaces
      tags:
        - interfaces_access_and_trunk
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface
        content: |
          interface:
            GigabitEthernet:
              - name: '1/0'
                description: 'access port'
                switchport:
                  mode:
                    access: {}
                  access:
                    vlan: 100
              - name: '1/1'
                description: 'trunk port'
                switchport:
                  mode:
                    trunk: {}
                  trunk:
                    encapsulation: dot1q
                    native:
                      vlan: 99
                    allowed:
                      vlan:
                        vlans:
                          - 10
                          - 100
        api_method: PATCH
    - name: Execute NSO NED to OC script
      tags:
        - interfaces_access_and_trunk
      script: ../../../package_nso_to_oc/xe/xe_interfaces.py
      args:
        executable: python3
      register: nso_to_oc_result
    - debug:
        msg: "{{nso_to_oc_result}}"
      tags:
        - interfaces_access_and_trunk
    - name: NSO API call
      tags:
        - interfaces_access_and_trunk
      uri:
        url: "http://{{ nso_host }}:8080/restconf/data/tailf-ncs:devices/device={{ device }}/mdd:openconfig"
        url_username: "{{ nso_username }}"
        url_password: "{{ nso_password }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: GET
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
      delegate_to: localhost
      register: oc_result
    - debug:
        msg: "{{ oc_result }}"
    - assert:
        that:
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][4]['name'] == 'GigabitEthernet1/0'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][4]['openconfig-if-ethernet:ethernet']['openconfig-vlan:switched-vlan']['config']['interface-mode'] == 'ACCESS'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][4]['openconfig-if-ethernet:ethernet']['openconfig-vlan:switched-vlan']['config']['access-vlan'] == 100"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][5]['name'] == 'GigabitEthernet1/1'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][5]['openconfig-if-ethernet:ethernet']['openconfig-vlan:switched-vlan']['config']['interface-mode'] == 'TRUNK'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][5]['openconfig-if-ethernet:ethernet']['openconfig-vlan:switched-vlan']['config']['native-vlan'] == 99"
          - "10 in oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][5]['openconfig-if-ethernet:ethernet']['openconfig-vlan:switched-vlan']['config']['trunk-vlans']"
          - "100 in oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][5]['openconfig-if-ethernet:ethernet']['openconfig-vlan:switched-vlan']['config']['trunk-vlans']"

    - name: NSO configure Interfaces
      tags:
        - interfaces_LACP_trunk
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface
        content: |
          interface:
            Port-channel:
              - name: '1'
                description: 'LACP trunk port'
                switchport:
                  mode:
                    trunk: {}
                  trunk:
                    encapsulation: dot1q
                    native:
                      vlan: 99
                    allowed:
                      vlan:
                        vlans:
                          - 10
                          - 100
            GigabitEthernet:
              - name: '1/1'
                description: 'LACP member trunk port'
                switchport:
                  trunk:
                    encapsulation: dot1q
                    native:
                      vlan: 99
                    allowed:
                      vlan:
                        vlans:
                          - 10
                          - 100
                  mode:
                    trunk: {}
                channel-group:
                  number: 1
                  mode: active
        api_method: PATCH
    - name: Execute NSO NED to OC script
      tags:
        - interfaces_LACP_trunk
      script: ../../../package_nso_to_oc/xe/xe_interfaces.py
      args:
        executable: python3
      register: nso_to_oc_result
    - debug:
        msg: "{{nso_to_oc_result}}"
      tags:
        - interfaces_LACP_trunk
    - name: NSO API call
      tags:
        - interfaces_LACP_trunk
      uri:
        url: "http://{{ nso_host }}:8080/restconf/data/tailf-ncs:devices/device={{ device }}/mdd:openconfig"
        url_username: "{{ nso_username }}"
        url_password: "{{ nso_password }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: GET
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
      delegate_to: localhost
      register: oc_result
    - debug:
        msg: "{{ oc_result }}"
      tags:
        - interfaces_LACP_trunk
    - assert:
        that:
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['name'] == 'Port-channel1'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-if-aggregate:aggregation']['openconfig-vlan:switched-vlan']['config']['interface-mode'] == 'TRUNK'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-if-aggregate:aggregation']['openconfig-vlan:switched-vlan']['config']['native-vlan'] == 99"
          - "10 in oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-if-aggregate:aggregation']['openconfig-vlan:switched-vlan']['config']['trunk-vlans']"
          - "100 in oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-if-aggregate:aggregation']['openconfig-vlan:switched-vlan']['config']['trunk-vlans']"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][5]['name'] == 'GigabitEthernet1/1'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][5]['openconfig-if-ethernet:ethernet']['config']['openconfig-if-aggregate:aggregate-id'] == 'Port-channel1'"
    - name: DELETE NED G1/1 channel group
      tags:
        - interfaces_LACP_trunk
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/GigabitEthernet=1%2F1/channel-group
        content: ''
        api_method: DELETE
    - name: DELETE NED port-channel 1
      tags:
        - interfaces_LACP_trunk
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/Port-channel=1
        content: ''
        api_method: DELETE
    - name: DELETE MDD interface G1/1 aggregate-id
      tags:
        - interfaces_LACP_trunk
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: mdd:openconfig/openconfig-interfaces:interfaces/openconfig-interfaces:interface=GigabitEthernet1%2F1/openconfig-if-ethernet:ethernet/openconfig-if-ethernet:config/openconfig-if-aggregate:aggregate-id
        content: ""
        api_method: DELETE
    - name: DELETE MDD port-channel
      tags:
        - interfaces_LACP_trunk
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: mdd:openconfig/openconfig-interfaces:interfaces/openconfig-interfaces:interface=Port-channel1
        content: ''
        api_method: DELETE

    - name: NSO configure Interfaces
      tags:
        - interfaces_LACP_access
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface
        content: |
          interface:
            Port-channel:
              - name: '1'
                description: 'LACP access port'
                switchport:
                  mode:
                    access: {}
                  access:
                    vlan: 100
            GigabitEthernet:
              - name: '1/1'
                description: 'LACP member'
                switchport:
                  mode:
                    access: {}
                  access:
                    vlan: 100
                channel-group:
                  number: 1
                  mode: active
        api_method: PATCH
    - name: Execute NSO NED to OC script
      tags:
        - interfaces_LACP_access
      script: ../../../package_nso_to_oc/xe/xe_interfaces.py
      args:
        executable: python3
      register: nso_to_oc_result
    - debug:
        msg: "{{nso_to_oc_result}}"
      tags:
        - interfaces_LACP_access
    - name: NSO API call
      tags:
        - interfaces_LACP_access
      uri:
        url: "http://{{ nso_host }}:8080/restconf/data/tailf-ncs:devices/device={{ device }}/mdd:openconfig"
        url_username: "{{ nso_username }}"
        url_password: "{{ nso_password }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: GET
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
      delegate_to: localhost
      register: oc_result
    - debug:
        msg: "{{ oc_result }}"
      tags:
        - interfaces_LACP_access
    - assert:
        that:
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['name'] == 'Port-channel1'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-if-aggregate:aggregation']['openconfig-vlan:switched-vlan']['config']['interface-mode'] == 'ACCESS'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-if-aggregate:aggregation']['openconfig-vlan:switched-vlan']['config']['access-vlan'] == 100"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][5]['name'] == 'GigabitEthernet1/1'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][5]['openconfig-if-ethernet:ethernet']['config']['openconfig-if-aggregate:aggregate-id'] == 'Port-channel1'"
    - name: DELETE NED G1/1 channel group
      tags:
        - interfaces_LACP_access
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/GigabitEthernet=1%2F1/channel-group
        content: ''
        api_method: DELETE
    - name: DELETE NED port-channel 1
      tags:
        - interfaces_LACP_access
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/Port-channel=1
        content: ''
        api_method: DELETE
    - name: DELETE MDD interface G1/1 aggregate-id
      tags:
        - interfaces_LACP_access
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: mdd:openconfig/openconfig-interfaces:interfaces/openconfig-interfaces:interface=GigabitEthernet1%2F1/openconfig-if-ethernet:ethernet/openconfig-if-ethernet:config/openconfig-if-aggregate:aggregate-id
        content: ""
        api_method: DELETE
    - name: DELETE MDD port-channel
      tags:
        - interfaces_LACP_access
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: mdd:openconfig/openconfig-interfaces:interfaces/openconfig-interfaces:interface=Port-channel1
        content: ''
        api_method: DELETE

    - name: NSO configure Interfaces
      tags:
        - interfaces_LACP_L3
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface
        content: |
          interface:
            Port-channel:
              - name: '1'
                description: 'LACP L3'
                ip:
                  address:
                    primary:
                      address: 192.168.3.1
                      mask: 255.255.255.0
        api_method: PATCH
    - name: Execute NSO NED to OC script
      tags:
        - interfaces_LACP_L3
      script: ../../../package_nso_to_oc/xe/xe_interfaces.py
      args:
        executable: python3
      register: nso_to_oc_result
    - debug:
        msg: "{{nso_to_oc_result}}"
      tags:
        - interfaces_LACP_L3
    - name: NSO API call
      tags:
        - interfaces_LACP_L3
      uri:
        url: "http://{{ nso_host }}:8080/restconf/data/tailf-ncs:devices/device={{ device }}/mdd:openconfig"
        url_username: "{{ nso_username }}"
        url_password: "{{ nso_password }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: GET
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
      delegate_to: localhost
      register: oc_result
    - debug:
        msg: "{{ oc_result }}"
    - assert:
        that:
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['name'] == 'Port-channel1'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-if-aggregate:aggregation']['openconfig-if-ip:ipv4']['addresses']['address'][0]['config']['ip'] == '192.168.3.1'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-if-aggregate:aggregation']['openconfig-if-ip:ipv4']['addresses']['address'][0]['config']['prefix-length'] == 24"
    - name: DELETE NED port-channel 1
      tags:
        - interfaces_LACP_L3
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/Port-channel=1
        content: ''
        api_method: DELETE
    - name: DELETE MDD port-channel
      tags:
        - interfaces_LACP_L3
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: mdd:openconfig/openconfig-interfaces:interfaces/openconfig-interfaces:interface=Port-channel1
        content: ''
        api_method: DELETE
    - name: NSO configure Interfaces
      tags:
        - interfaces_ipv4
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface
        content: |
          interface:
            Vlan:
              - name: 100
                description: descriptionVLAN100
                ip:
                  address:
                    primary:
                      address: 192.168.100.2
                      mask: 255.255.255.0
                  mtu: 1476
                  unreachables: false
                  redirects: false
                  tcp:
                    adjust-mss: 1400
                  proxy-arp: true
                  mask-reply:
                    - null
                  nat:
                    inside:
                      - null
                vrrp:
                  - id: 6
                    preempt:
                      delay:
                        minimum: 10
                    timers:
                      advertise:
                        seconds: 3
                    ip:
                      address: 192.168.100.1
              - name: 6
                ip:
                  address:
                    primary:
                      address: 192.168.6.1
                      mask: 255.255.255.0
                  nat:
                    inside:
                      - null
        api_method: PATCH

    - name: Execute NSO NED to OC script
      tags:
        - interfaces_ipv4
      script: ../../../package_nso_to_oc/xe/xe_interfaces.py
      args:
        executable: python3
      register: nso_to_oc_result
    - debug:
        msg: "{{nso_to_oc_result}}"
      tags:
        - interfaces_ipv4
    - name: NSO API call
      tags:
        - interfaces_ipv4
      uri:
        url: "http://{{ nso_host }}:8080/restconf/data/tailf-ncs:devices/device={{ device }}/mdd:openconfig"
        url_username: "{{ nso_username }}"
        url_password: "{{ nso_password }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: GET
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
      delegate_to: localhost
      register: oc_result
    - debug:
        msg: "{{ oc_result }}"
      tags:
        - interfaces_ipv4
    - assert:
        that:
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['name'] == 'Vlan100'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['config']['vlan'] == 100"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['addresses']['address'][0]['config']['ip'] == '192.168.100.2'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['addresses']['address'][0]['config']['prefix-length'] == 24"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['addresses']['address'][0]['vrrp']['vrrp-group'][0]['config']['preempt-delay'] == 10"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['addresses']['address'][0]['vrrp']['vrrp-group'][0]['config']['advertisement-interval'] == 300"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['config']['mtu'] == 1476"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['config']['openconfig-if-ip-mdd-ext:tcp-adjust-mss'] == 1400"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['config']['openconfig-if-ip-mdd-ext:redirects'] == False"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['config']['openconfig-if-ip-mdd-ext:unreachables'] == False"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['proxy-arp']['config']['mode'] == 'REMOTE_ONLY'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['config']['openconfig-if-ip-mdd-ext:mask-reply'] == true"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['openconfig-vlan:routed-vlan']['openconfig-if-ip:ipv4']['config']['openconfig-if-ip-mdd-ext:nat']['nat-choice'] == 'inside'"
    - name: NSO configure Interfaces
      tags:
        - interfaces_VLAN100
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: mdd:openconfig/openconfig-interfaces:interfaces/openconfig-interfaces:interface=Vlan100
        content: ''
        api_method: DELETE
    - name: DELETE NED VLAN100
      tags:
        - interfaces_VLAN100
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/Vlan=100
        content: ''
        api_method: DELETE

    - name: NSO configure Interfaces
      tags:
        - interfaces_LACP_L3_SUBIFs
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface
        content: |
          interface:
            Port-channel:
              name: 10
              description: PO10
            Port-channel-subinterface:
              Port-channel:
                - name: '10.105'
                  description: 'Sub interface 105'
                  encapsulation:
                    dot1Q:
                      vlan-id: 105
                  ip:
                    address:
                      primary:
                        address: 172.10.105.1
                        mask: 255.255.255.0
                - name: '10.106'
                  description: 'Sub interface 106'
                  encapsulation:
                    dot1Q:
                      vlan-id: 106
                  ip:
                    address:
                      primary:
                        address: 172.10.106.1
                        mask: 255.255.255.0
        api_method: PATCH
    - name: Execute NSO NED to OC script
      tags:
        - interfaces_LACP_L3_SUBIFs
      script: ../../../package_nso_to_oc/xe/xe_interfaces.py
      args:
        executable: python3
      register: nso_to_oc_result
    - debug:
        msg: "{{nso_to_oc_result}}"
      tags:
        - interfaces_LACP_L3_SUBIFs
    - name: NSO API call
      tags:
        - interfaces_LACP_L3_SUBIFs
      uri:
        url: "http://{{ nso_host }}:8080/restconf/data/tailf-ncs:devices/device={{ device }}/mdd:openconfig"
        url_username: "{{ nso_username }}"
        url_password: "{{ nso_password }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: GET
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
      delegate_to: localhost
      register: oc_result
    - debug:
        msg: "{{ oc_result }}"
    - assert:
        that:
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['name'] == 'Port-channel10'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['subinterfaces']['subinterface'][0]['config']['index'] == 105"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['subinterfaces']['subinterface'][0]['openconfig-if-ip:ipv4']['addresses']['address'][0]['config']['ip'] == '172.10.105.1'"
          - "oc_result.json['mdd:openconfig']['openconfig-interfaces:interfaces']['interface'][8]['subinterfaces']['subinterface'][0]['openconfig-if-ip:ipv4']['addresses']['address'][0]['config']['prefix-length'] == 24"
    - name: DELETE NED port-channel 10
      tags:
        - interfaces_LACP_L3_SUBIFs
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:interface/Port-channel=10
        content: ''
        api_method: DELETE
    - name: DELETE MDD port-channel
      tags:
        - interfaces_LACP_L3_SUBIFs
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: mdd:openconfig/openconfig-interfaces:interfaces/openconfig-interfaces:interface=Port-channel10
        content: ''
        api_method: DELETE
