---
- hosts: localhost
  gather_facts: no
  environment:
    NSO_DEVICE: xe1
  vars:
    nso_host: "{{ lookup('env', 'NSO_HOST') }}"
    nso_username: "{{ lookup('env', 'NSO_USERNAME') }}"
    nso_password: "{{ lookup('env', 'NSO_PASSWORD') }}"
    device: "{{ lookup('env', 'TEST_DEVICE_XEROUTER') | default('xe1', True) }}"
  tasks:
    - name: Set up service config
      tags:
        - set_up
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: mdd:openconfig
        content: |
          mdd:openconfig:
            openconfig-system:system:
              config:
                hostname: 'test'
            openconfig-interfaces:interfaces:
              interface:
                - config:
                    name: 'GigabitEthernet1'
                    type: 'ethernetCsmacd'
                    enabled: true
                  name: 'GigabitEthernet1'
                  subinterfaces:
                    subinterface:
                      - config:
                          index: 0
                        index: 0
                        openconfig-if-ip:ipv4:
                          config:
                            dhcp-client: true
                - config:
                    name: 'GigabitEthernet2'
                    type: 'ethernetCsmacd'
                  name: 'GigabitEthernet2'
                  subinterfaces:
                    subinterface:
                      - config:
                          index: 0
                        index: 0
                        openconfig-if-ip:ipv4:
                          config:
                            dhcp-client: true
                - config:
                    name: 'GigabitEthernet3'
                    type: 'ethernetCsmacd'
                  name: 'GigabitEthernet3'
                  subinterfaces:
                    subinterface:
                      - config:
                          index: 0
                        index: 0
                        openconfig-if-ip:ipv4:
                          config:
                            dhcp-client: true
                - config:
                    name: 'GigabitEthernet4'
                    type: 'ethernetCsmacd'
                  name: 'GigabitEthernet4'
                  subinterfaces:
                    subinterface:
                      - config:
                          index: 0
                        index: 0
                        openconfig-if-ip:ipv4:
                          config:
                            dhcp-client: true
                - config:
                    name: 'GigabitEthernet5'
                    type: 'ethernetCsmacd'
                  name: 'GigabitEthernet5'
                  subinterfaces:
                    subinterface:
                      - config:
                          index: 0
                        index: 0
                        openconfig-if-ip:ipv4:
                          config:
                            dhcp-client: true
                - config:
                    name: 'GigabitEthernet6'
                    type: 'ethernetCsmacd'
                  name: 'GigabitEthernet6'
                  subinterfaces:
                    subinterface:
                      - config:
                          index: 0
                        index: 0
                        openconfig-if-ip:ipv4:
                          addresses:
                            address:
                              - config:
                                  ip: '10.6.0.1'
                                  prefix-length: 30
                                ip: '10.6.0.1'
                          config:
                            dhcp-client: false
                - config:
                    name: 'GigabitEthernet7'
                    type: 'ethernetCsmacd'
                  name: 'GigabitEthernet7'
                  subinterfaces:
                    subinterface:
                      - config:
                          index: 0
                        index: 0
                        openconfig-if-ip:ipv4:
                          addresses:
                            address:
                              - config:
                                  ip: '10.7.0.1'
                                  prefix-length: 30
                                ip: '10.7.0.1'
                          config:
                            dhcp-client: false
                - config:
                    name: 'GigabitEthernet8'
                    type: 'ethernetCsmacd'
                  name: 'GigabitEthernet8'
                  subinterfaces:
                    subinterface:
                      - config:
                          index: 0
                        index: 0
                        openconfig-if-ip:ipv4:
                          config:
                            dhcp-client: true
        api_method: PUT

    - name: NSO configure Interfaces
      tags:
        - vrf
      import_role:
        name: nso-ned-device-configure
      vars:
        api_path: config/tailf-ned-cisco-ios:vrf/definition
        content: |
          definition:
            - name: abc
              address-family:
                ipv4: {}
                ipv6: {}
            - name: xyz
              address-family:
                ipv4: {}
                ipv6: {}
        api_method: PATCH
    - set_fact:
        vrf_default:
          name: default
          config:
            enabled: true
            name: default
            type: 'openconfig-network-instance-types:DEFAULT_INSTANCE'
    - set_fact:
        vrf_abc:
          config:
            enabled: true
            enabled-address-families:
              - 'openconfig-types:IPV6'
              - 'openconfig-types:IPV4'
            name: 'abc'
            type: 'openconfig-network-instance-types:L3VRF'
          name: 'abc'
    - set_fact:
        vrf_xyz:
          config:
            enabled: true
            enabled-address-families:
              - 'openconfig-types:IPV6'
              - 'openconfig-types:IPV4'
            name: 'xyz'
            type: 'openconfig-network-instance-types:L3VRF'
          name: 'xyz'

    - name: Execute NSO NED to OC script
      script: ../../package_nso_to_oc/xe/xe_network_instances.py
      args:
        executable: python3
      register: nso_to_oc_result
    - debug:
        msg: "{{nso_to_oc_result}}"
    - name: NSO API call
      uri:
        url: "http://{{ nso_host }}:8080/restconf/data/tailf-ncs:devices/device={{ device }}/mdd:openconfig"
        url_username: "{{ nso_username }}"
        url_password: "{{ nso_password }}"
        force_basic_auth: yes
        validate_certs: no
        status_code: [200,201,204]
        method: GET
        headers: "{
          'Content-Type': 'application/yang-data+json',
          'Accept': 'application/yang-data+json'}"
        body_format: json
      delegate_to: localhost
      register: oc_result
    - debug:
        msg: "{{ oc_result }}"
    - debug:
        msg: "{{ oc_result.json['mdd:openconfig']['openconfig-network-instance:network-instances']['network-instance'][0] }}"
    - assert:
        that:
          - "vrf_default in oc_result.json['mdd:openconfig']['openconfig-network-instance:network-instances']['network-instance']"
          - "vrf_abc in oc_result.json['mdd:openconfig']['openconfig-network-instance:network-instances']['network-instance']"
          - "vrf_xyz in oc_result.json['mdd:openconfig']['openconfig-network-instance:network-instances']['network-instance']"
