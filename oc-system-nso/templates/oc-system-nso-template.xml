<config-template xmlns="http://tail-f.com/ns/config/1.0">
  <devices xmlns="http://tail-f.com/ns/ncs">
    <device>
      <name>{/device}</name>
      <config>

        <?if {/openconfig-system/system/aaa}?>
        <?if {/openconfig-system/system/aaa/authentication/admin-user/admin-password}?>
        <username xmlns="urn:ios">
          <name>admin</name>
          <privilege>15</privilege>
          <secret>
            <type>0</type>
            <secret>{/openconfig-system/system/aaa/authentication/admin-user/admin-password}</secret>
          </secret>
        </username>
        <?end?> <!-- end if {/openconfig-system/system/aaa/authentication/admin-user/admin-password} -->

<!--        Due to templating limitations, aaa accounting is being configured in python-->

        <aaa xmlns="urn:ios">
          <?if {/openconfig-system/system/aaa/authentication/config/authentication-method}?>
          <new-model/>
          <authentication>
            <login>
              <name>default</name>
              <tacacsplus when="{$XE_AUTHENTICATION_TACACS='True'}"/>
              <local when="{$XE_AUTHENTICATION_LOCAL='True'}"/>
            </login>
          </authentication>
          <?end?> <!-- end if {/openconfig-system/system/aaa/authentication/config/authentication-method} -->
          <authorization>
            <?if {$XE_AUTHORIZATION_AAA_AUTHORIZATION_EVENT_CONFIG='True'}?>
            <exec>
              <name>default</name>
              <tacacsplus when="{$XE_AUTHORIZATION_TACACS='True'}"/>
              <local when="{$XE_AUTHORIZATION_LOCAL='True'}"/>
            </exec>
            <?end?> <!-- end if {$XE_AUTHORIZATION_AAA_AUTHORIZATION_EVENT_CONFIG='True'} -->
            <?if {$XE_AUTHORIZATION_AAA_AUTHORIZATION_EVENT_COMMAND='True'}?>
            <config-commands/>
            <commands>
              <level>15</level>
              <name>default</name>
              <tacacsplus when="{$XE_AUTHORIZATION_TACACS='True'}"/>
              <local when="{$XE_AUTHORIZATION_LOCAL='True'}"/>
            </commands>
            <?end?> <!-- end if {$XE_AUTHORIZATION_AAA_AUTHORIZATION_EVENT_COMMAND='True'} -->
          </authorization>
        </aaa>

        <?if {/openconfig-system/system/aaa/authentication/users/user}?>
        <?foreach {/openconfig-system/system/aaa/authentication/users/user}?>
        <username xmlns="urn:ios" tags="replace">
          <name>{current()/username}</name>
          <privilege when="{current()/config/role='SYSTEM_ROLE_ADMIN'}">15</privilege>
          <password>
            <type>0</type>
            <secret>{current()/config/password}</secret>
          </password>
        </username>
        <?end?> <!-- end foreach {/openconfig-system/system/aaa/authentication/users/user} -->
        <?end?> <!-- end if {/openconfig-system/system/aaa/authentication/users/user} -->

        <!--Create the servers 1st-->
        <tacacs xmlns="urn:ios">
          <?foreach {/openconfig-system/system/aaa/server-groups/server-group}?>
          <?if {current()/servers/server}?>
          <?foreach {current()/servers/server}?>
          <?set TIMEOUT = {current()/config/timeout}?>
          <?set PASSWORD = {current()/tacacs/config/secret-key}?>
          <?set PORT = {current()/tacacs/config/port}?>
          <server>
            <name>{current()/config/name}</name>
            <address>
              <ipv4>{current()/address}</ipv4>
            </address>
            <timeout>{$TIMEOUT}</timeout>
            <key>
              <type>0</type>
              <secret>{$PASSWORD}</secret>
            </key>
            <port>{$PORT}</port>
          </server>
          <?end?> <!-- end foreach {current()/servers/server} -->
          <?end?> <!-- end if {current()/servers/server} -->
          <?end?> <!-- end foreach {/openconfig-system/system/aaa/server-groups/server-group} -->
        </tacacs>

        <!--                Create the groups -->
        <aaa xmlns="urn:ios">
          <group tags="replace">
            <server>
              <?foreach {/openconfig-system/system/aaa/server-groups/server-group}?>
              <tacacs-plus>
                <name>{current()/name}</name>
                <server tags="replace">
                  <?foreach {current()/servers/server}?>
                  <name>
                    <name>{current()/config/name}</name>
                  </name>
                  <?end?> <!-- end foreach {current()/servers/server} -->
                </server>
                <ip>
                  <tacacs>
                    <source-interface>
                      <Loopback when="{$XE_TACACS_SOURCE_INF_TYPE='Loopback'}">{$XE_TACACS_SOURCE_INF_NUMBER}</Loopback>
                      <GigabitEthernet when="{$XE_TACACS_SOURCE_INF_TYPE='GigabitEthernet'}">
                        {$XE_TACACS_SOURCE_INF_NUMBER}
                      </GigabitEthernet>
                    </source-interface>
                  </tacacs>
                </ip>
              </tacacs-plus>
              <?end?> <!-- end foreach {/openconfig-system/system/aaa/server-groups/server-group} -->
            </server>
          </group>
        </aaa>
        <?end?> <!-- if {/openconfig-system/system/aaa} -->

        <?if {/openconfig-system/system/clock/config/timezone-name}?>
        <clock xmlns="urn:ios">
          <timezone>
            <?if {$XE_TIMEZONE}?>
            <zone>{$XE_TIMEZONE}</zone>
            <?end?> <!-- if {$XE_TIMEZONE} -->
            <?if {$XE_TIMEZONE_OFFSET_HOURS}?>
            <hours>{$XE_TIMEZONE_OFFSET_HOURS}</hours>
            <?end?> <!-- if {$XE_TIMEZONE_OFFSET_HOURS} -->
            <?if {$XE_TIMEZONE_OFFSET_MINUTES}?>
            <minutes>{$XE_TIMEZONE_OFFSET_MINUTES}</minutes>
            <?end?> <!-- if {$XE_TIMEZONE_OFFSET_MINUTES} -->
          </timezone>
        </clock>
        <?end?> <!-- if {/openconfig-system/system/clock/config/timezone-name} -->

        <?if {/openconfig-system/system/config}?>
        <?if {/openconfig-system/system/config/hostname}?>
        <hostname xmlns="urn:ios">{/openconfig-system/system/config/hostname}</hostname>
        <?end?> <!-- if {/openconfig-system/system/config/hostname} -->

        <?if {/openconfig-system/system/config/domain-name}?>
        <ip xmlns="urn:ios">
          <domain>
            <name>{/openconfig-system/system/config/domain-name}</name>
          </domain>
        </ip>
        <?end?> <!-- if {/openconfig-system/system/config/domain-name} -->

        <banner xmlns="urn:ios">
          <?if {/openconfig-system/system/config/login-banner}?>
          <login>{/openconfig-system/system/config/login-banner}</login>
          <?end?> <!-- if {/openconfig-system/system/config/login-banner} -->
          <?if {/openconfig-system/system/config/motd-banner}?>
          <motd>{/openconfig-system/system/config/motd-banner}</motd>
          <?end?> <!-- if {/openconfig-system/system/config/motd-banner} -->
        </banner>
        <?end?> <!-- if {/openconfig-system/system/config} -->

        <?if {/openconfig-system/system/dns/servers}?>
        <ip xmlns="urn:ios">
          <name-server tags="replace">
            <?foreach {/openconfig-system/system/dns/servers/server}?>
            <name-server-list>
              <address>{current()/address}</address>
            </name-server-list>
            <?end?> <!-- foreach {/openconfig-system/system/dns/servers/server} -->
          </name-server>
        </ip>
        <?end?> <!-- if {/openconfig-system/system/dns/servers} -->

        <?if {/openconfig-system/system/logging}?>
        <logging xmlns="urn:ios">
          <?if {$XE_CONSOLE_SEVERITY}?>
          <console>
            <severity-level>{$XE_CONSOLE_SEVERITY}</severity-level>
          </console>
          <monitor>
            <severity-level>{$XE_CONSOLE_SEVERITY}</severity-level>
          </monitor>
          <?end?> <!-- if {$XE_CONSOLE_SEVERITY} -->

          <?if {$XE_CONSOLE_FACILITY or $XE_REMOTE_FACILITY}?>
          <facility>{$XE_CONSOLE_FACILITY}</facility>
          <?else?>
          <facility>{$XE_REMOTE_FACILITY}</facility>
          <?end?> <!-- if {$XE_CONSOLE_FACILITY or $XE_REMOTE_FACILITY} -->

          <?if {/openconfig-system/system/logging/remote-servers/remote-server}?>
          <host tags="replace">
            <?foreach {/openconfig-system/system/logging/remote-servers/remote-server}?>
            <ipv4>
              <host>{current()/host}</host>
            </ipv4>
            <?end?> <!-- foreach {/openconfig-system/system/logging/remote-servers/remote-server} -->
          </host>
          <?end?> <!-- if {/openconfig-system/system/logging/remote-servers/remote-server} -->

          <?if {$XE_LOGGING_SOURCE_INF_NAME}?>
          <source-interface>
            <name>{$XE_LOGGING_SOURCE_INF_NAME}</name>
          </source-interface>
          <?end?> <!-- if {$XE_LOGGING_SOURCE_INF_NAME} -->
        </logging>
        <?end?> <!-- if {/openconfig-system/system/logging} -->

        <?if {/openconfig-system/system/ntp/servers/server}?>
        <ntp xmlns="urn:ios" tags="replace">
          <?if {/openconfig-system/system/ntp/config/enabled='true'}?>
          <?if {/openconfig-system/system/ntp/config/ntp-source-address}?>
          <?if {$XE_NTP_SOURCE_INF_TYPE}?>
          <source>
            <Loopback when="{$XE_NTP_SOURCE_INF_TYPE='Loopback'}">{$XE_NTP_SOURCE_INF_NUMBER}</Loopback>
            <GigabitEthernet when="{$XE_NTP_SOURCE_INF_TYPE='GigabitEthernet'}">{$XE_NTP_SOURCE_INF_NUMBER}
            </GigabitEthernet>
          </source>
          <?end?> <!-- if {$XE_NTP_SOURCE_INF_TYPE} -->
          <?end?> <!-- if {/openconfig-system/system/ntp/config/ntp-source-address} -->
          <?if {/openconfig-system/system/ntp/servers/server}?>
          <server tags="replace">
            <?foreach {/openconfig-system/system/ntp/servers/server}?>
            <peer-list>
              <name>{current()/config/address}</name>
              <?if {current()/config/iburst='true'}?>
              <iburst/>
              <?end?> <!-- if {current()/config/iburst='true'} -->
              <?if {current()/config/prefer='true'}?>
              <prefer/>
              <?end?> <!-- if {current()/config/prefer='true'} -->
              <version>{current()/config/version}</version>
            </peer-list>
            <?end?> <!-- foreach {/openconfig-system/system/ntp/servers/server} -->
          </server>
          <?end?> <!-- if {/openconfig-system/system/ntp/servers/server} -->
          <?else?> <!-- if {/openconfig-system/system/ntp/config/enabled='true'} -->
          <source tags="delete"/>
          <server tags="delete"/>
          <?end?> <!-- if {/openconfig-system/system/ntp/config/enabled='true'} -->
        </ntp>
        <?end?>  <!-- if {/openconfig-system/system/ntp/servers/server} -->

        <?if {/openconfig-system/system/ssh-server}?>
        <ip xmlns="urn:ios">
          <ssh>
            <version when="{/openconfig-system/system/ssh-server/config/protocol-version='V2'}">2</version>
            <version when="{/openconfig-system/system/ssh-server/config/protocol-version='V1'}">1</version>
            <version when="{/openconfig-system/system/ssh-server/config/protocol-version='V1_V2'}" tags="delete"/>
          </ssh>
        </ip>
        <line xmlns="urn:ios">
          <vty>
            <first>0</first>
            <last>4</last>
            <exec-timeout>
              <minutes>{$XE_EXEC_TIMEOUT_MINUTES}</minutes>
              <seconds>{$XE_EXEC_TIMEOUT_SECONDS}</seconds>
            </exec-timeout>
            <session-limit>{/openconfig-system/system/ssh-server/config/session-limit}</session-limit>
            <?if {/openconfig-system/system/ssh-server/config/enable='true'}?>
            <transport>
              <input>ssh</input>
            </transport>
            <?end?> <!-- if {/openconfig-system/system/ssh-server/config/enable='true'} -->
          </vty>
        </line>
        <?end?> <!-- if {/openconfig-system/system/ssh-server} -->
      </config>
    </device>
  </devices>
</config-template>
